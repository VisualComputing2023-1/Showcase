<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing 2023-1</title><link>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/</link><description>Recent content on Visual Computing 2023-1</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Color-mapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Color-mapping/</guid><description>Color mapping applications # Exercise
Implement a color mapping application that helps people who are color blind see the colors around them. Introduction # In this exercise we are going to show how a colorblind person can perceive the colors in the real world.
Color Mapping # A color map is a set of values that are associated with colors. Generally is used to display a single brand raster consistenly with the same colors.</description></item><item><title/><link>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Color-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Color-models/</guid><description>Color models # Exercise
Research other color models such as HSL, HSB, XYZ. Definition of subtractive/additive color models
Additive color models # An additive color model is a model formed by the combination of coincident component lights, starting with blackness. In this model, the three primary colors are red, green and blue.
It corresponds to color produced by a combination of different lights.
RGB RGB # RGB content The RGB color model allows to define colors thanks to three values defining respectively the quantity of red, green and blue for the defined colour.</description></item><item><title/><link>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Depth-Perception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Depth-Perception/</guid><description>Depth Perception with Monocular Cues # Introduction # Depth perception is a crucial aspect of human vision, allowing us to perceive the distance and spatial relationships between objects in our environment. While binocular vision, which relies on the slightly different perspectives provided by each eye, is an important factor in depth perception, monocular cues can also provide valuable depth information. In this report, we&amp;rsquo;ll explore some of the different types of monocular cues, their applications, and how they contribute to our ability to perceive the 3D world around us.</description></item><item><title/><link>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Terrain-generation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-1.github.io/Showcase/docs/shortcodes/First-deliverable/Terrain-generation/</guid><description>Terrain generation # Exercise
Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial. let col, row; // attributes of cols and rows for the grid let scl = 20 ; //to decide how much cols/rows there are let w = 1400; let h = 1000; let heights = [] // to change the model : assets let sliderSpeed; let sliderNoise; let checkStroke; let flying = 0 ; //variable that allows to fly over the terrain let btnUp; let btnDown; let btnLeft; let btnRight; //attributes varying with the asset values let direction = &amp;#34;up&amp;#34;; let lines = true; function initButtons(){ btnUp = createImg(&amp;#34;assets/arrowUp.</description></item></channel></rss>